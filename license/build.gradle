plugins {
	id 'org.springframework.boot' version '2.3.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'net.ltgt.apt' version '0.20'
}

group = 'com.penta.ps.license.license'
version = '4.0.303.1'
sourceCompatibility = '1.8'

springBoot {
	buildInfo()
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "Hoxton.SR8")
	set('log4j2.version', '2.15.0')
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	// https://mvnrepository.com/artifact/com.google.code.findbugs/jsr305
	implementation 'com.google.code.findbugs:jsr305:3.0.2'
	implementation 'org.ini4j:ini4j:0.5.4'

	// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt
	compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
	
	// https://mvnrepository.com/artifact/com.auth0/auth0-spring-security-api
	compile group: 'com.auth0', name: 'auth0-spring-security-api', version: '1.4.0'
	
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-webflux
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-webflux', version: '2.3.1.RELEASE'

	implementation "org.mapstruct:mapstruct:1.3.1.Final"
	annotationProcessor "org.mapstruct:mapstruct-processor:1.3.1.Final"

	compile 'net.rakugakibox.util:yaml-resource-bundle:1.1'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

compileJava {
	options.compilerArgs = [
			'-Amapstruct.suppressGeneratorTimestamp=true',
			'-Amapstruct.suppressGeneratorVersionInfoComment=true'
	]
}

test {
	useJUnitPlatform()
}
